import type {GetStaticProps} from 'next'
import Head from 'next/head'
import {Theme} from '@mui/material/styles'
import {IllustrationStepper, IllustrationStepperStep} from '../shared/IllustrationStepper/StepIllustrations'
import {Box, Divider, Grid} from '@mui/material'
import {apiSdk} from '../core/apiSdk'
import {Anomaly} from '@signal-conso/signalconso-api-sdk-js'
import {AnomalyCard} from '../shared/AnomalyCard/AnomalyCard'
import {serialiseJsonForStupidNextJs} from '../core/helper/utils'
import {SxProps} from '@mui/system'
import {ScButton} from '../shared/Button/Button'
import {useI18n} from '../core/i18n'
import {Section} from '../core/component/Section'
import {ReportStartedAlert} from '../feature/ReportStartedAlert/ReportStartedAlert'
import {sortBy} from '../core/lodashNamedExport'

const sxTitle: SxProps<Theme> = {
  fontSize: 24,
  mb: 3,
  mt: 2,
}

export const getStaticProps: GetStaticProps = async (context) => {
  const anomalies = await apiSdk.anomaly.getAnomalies()
    .then(res => res.filter(_ => !_.hidden))
    .then(res => sortBy(res, _ => _.id))
  return {
    props: serialiseJsonForStupidNextJs({
      anomalies
    }),
  }
}

// = InferGetStaticPropsType<typeof getStaticProps>
interface HomeProps {
  anomalies: Anomaly[]
}

const Home = ({anomalies}: HomeProps) => {
  const {m} = useI18n()
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main>
        <Section sx={{
          background: t => t.palette.primary.main,
          color: t => t.palette.primary.contrastText,
          textAlign: 'center',
          padding: 5,
          fontSize: 32,
          fontWeight: 'lighter',
        }}>
          Signaler un problème à <b>l&apos;entreprise</b> <br/>
          en toute transparence avec <b>la répression des fraudes</b> !
        </Section>

        <Section>
          <Box component="h2" sx={sxTitle}>Comment ça marche ?</Box>
          <IllustrationStepper>
            <IllustrationStepperStep title="Vous avez rencontré un problème<br/>avec une entreprise&#160;?" image="/image/illustrations/consumer.png" alt="consumer"/>
            <IllustrationStepperStep title="Faites un signalement<br/>avec SignalConso." image="/image/illustrations/report.png" alt="report"/>
            <IllustrationStepperStep title="L'entreprise est prévenue<br/>et peut intervenir." image="/image/illustrations/company.png" alt="company"/>
            <IllustrationStepperStep title="La répression des fraudes intervient si nécessaire." image="/image/illustrations/dgccrf.png" alt="dgccrf"/>
          </IllustrationStepper>

          <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'center', pt: 4, pb: 3}}>
            <ScButton
              onClick={() => {
                document.querySelector('#index-categories')?.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'})
              }}
              size="large"
              variant="contained"
              sx={{textTransform: 'unset'}}
              iconAfter="feedback"
            >
              {m.buttonReportProblem}
            </ScButton>
          </Box>
        </Section>
        <Divider/>
        <Section id="index-categories" component="section" sx={{
          background: '#fafafa'
        }}>
          <Box component="h2" sx={sxTitle}>Quel problème avez-vous rencontré ?</Box>
          <Grid container spacing={2}>
            {anomalies.map(a => (
              <Grid key={a.path} item xs={12} sm={6} md={4}>
                <AnomalyCard anomaly={a}/>
              </Grid>
            ))}
          </Grid>
        </Section>
      </main>
      <ReportStartedAlert/>
    </>
  )
}

export default Home
